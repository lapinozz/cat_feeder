@import 'theme';

.root
{
  display: grid;
	grid-template-areas: 
        "wifi connect"
        "wifi logs"
        "images logs"
        "dispensing-settings logs"
        "dispensing-settings commands";

	grid-template-rows: min-content 0 1fr min-content min-content;

	grid-template-columns: 1fr 1fr;

	padding: 1rem;
	position: absolute;

	&.wifi-open
	{	
		grid-template-rows: min-content minmax(0, 1fr) min-content min-content;
	}
}

.log
{
	grid-area: logs;
	padding: 2px;  
	overflow: auto;
  overflow-y: auto;
}

.connect
{
	margin-left: auto;
}

.secret-container
{
	grid-area: connect;
}

.img-container
{
	grid-area: images;

	.saved-img
	{
		grid-area: saved;
	}

	.stream-img
	{
		grid-area: stream;
	}
}

.command-container
{
	grid-area: commands;
}

.saved-img,
.stream-img
{
	max-height: 35vh;
	border: 2px gray solid;
	border-radius: 2px;
  object-fit: contain;
}

.dispensing-events-container
{
	grid-area: dispensing-settings;
	align-self: auto;
}

.dispensing-table-Amount input
{
	width: 3rem;
}

.wifi-container
{
	grid-area: wifi;

	.wifi-status-bar
	{
		padding: 0;
  	margin: 0;
	}

	.wifi-list
	{
		overflow-y: auto;
		padding: 0;

		.wifi-element
		{
			margin: 0;
			padding: 0.2rem;
			cursor: pointer;

			&:hover, &.selected
			{
				background: rgba(255, 255, 255, 0.2);
			}
		}

		.wifi-spinner::before
		{
			width: 40px;
			height: 40px;
		}
	}

	.wifi-connect-container
	{
		margin: 0;
		padding: 0;
	}
}

.root
{
	&.wifi-open
	{
		> :not(.wifi-container)
		{
			display: none;
		}
	}

	&:not(.wifi-open)
	{
		.wifi-list,
		.wifi-connect-container
		{
			display: none;
		}
	}
}

@media only screen and (max-width: 600px) {
  .root
	{
		padding: 0.5rem;
   	display: grid;

		grid-template-areas: 
	        "wifi"
	        "connect"
	        "images"
	        "dispensing-settings"
	        "logs"
	        "commands";

		grid-template-rows: min-content min-content minmax(0, min-content) min-content minmax(0, 1fr) min-content;
		grid-template-columns: 1fr;

		&.wifi-open
		{	
			grid-template-rows: minmax(0, 1fr) min-content min-content min-content minmax(0, min-content) min-content;
		}
	}

	.saved-img,
	.stream-img
	{
		max-height: 25vh;
	}
}

@keyframes spinner
{
  to
  {
  	transform: rotate(360deg);
  }
}
 
.spinner:before
{
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin-top: -10px;
  margin-left: -10px;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: $accent;
  border-bottom-color: $accent;
  animation: spinner .8s ease infinite;
}